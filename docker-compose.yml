services:
  backend:
    build: .
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - ./.env
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    env_file:
      - ./.env
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}"]
        interval: 10s
        timeout: 5s
        retries: 5

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:8080"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    depends_on:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  default: